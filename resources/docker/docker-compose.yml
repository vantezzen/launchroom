services:
  traefik:
    image: traefik:v3.3
    container_name: launchroom_traefik
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik.yml:/etc/traefik/traefik.yml
    ports:
      - '80:80'
      - '443:443'
      - '8090:8080'
    networks:
      - launchroom_net

  errors:
    image: nginx:latest
    volumes:
      - ./errors:/usr/share/nginx/error-pages
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - launchroom_net
    labels:
      traefik.enable: true

      traefik.docker.network: launchroom_net

      traefik.http.routers.catchall.rule: HostRegexp(`.+`)
      traefik.http.routers.catchall.priority: 1

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.size=256MB'
    networks:
      - launchroom_net
    labels:
      - 'traefik.http.routers.prometheus.rule=Host(`prometheus.docker.localhost`)'
      - 'traefik.http.routers.prometheus.service=prometheus'
      - 'traefik.http.services.prometheus.loadbalancer.server.port=9090'

  grafana:
    image: grafana/grafana
    depends_on:
      - prometheus
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      GF_INSTALL_PLUGINS: grafana-piechart-panel
    labels:
      - 'traefik.http.routers.grafana.rule=Host(`grafana.docker.localhost`)'
      - 'traefik.http.routers.grafana.service=grafana'
      - 'traefik.http.services.grafana.loadbalancer.server.port=3000'
    networks:
      - launchroom_net

volumes:
  prometheus_data:
  grafana_data:

networks:
  launchroom_net:
    external: true # docker network create launchroom_net
